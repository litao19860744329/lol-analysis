# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.57"
name = "tauri"
version = "1.0.0-rc.6"
authors = ["Tauri Programme within The Commons Conservancy"]
exclude = ["/test", "/.scripts", ".license_template", "CHANGELOG.md", "/target"]
description = "Make tiny, secure apps for all desktop platforms with Tauri"
homepage = "https://tauri.studio"
readme = "README.md"
categories = ["gui", "web-programming"]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/tauri-apps/tauri"
[package.metadata.cargo-udeps.ignore]
normal = ["attohttpc"]
[package.metadata.docs.rs]
default-target = "x86_64-unknown-linux-gnu"
features = ["wry", "custom-protocol", "api-all", "cli", "__updater-docs", "system-tray", "devtools", "dox"]
no-default-features = true
rustdoc-args = ["--cfg", "doc_cfg"]
targets = ["x86_64-pc-windows-msvc", "x86_64-unknown-linux-gnu", "x86_64-apple-darwin"]

[[example]]
name = "commands"
path = "../../examples/commands/main.rs"

[[example]]
name = "helloworld"
path = "../../examples/helloworld/main.rs"

[[example]]
name = "multiwindow"
path = "../../examples/multiwindow/main.rs"
required-features = ["window-create"]

[[example]]
name = "parent-window"
path = "../../examples/parent-window/main.rs"

[[example]]
name = "navigation"
path = "../../examples/navigation/main.rs"
required-features = ["window-create"]

[[example]]
name = "splashscreen"
path = "../../examples/splashscreen/main.rs"

[[example]]
name = "state"
path = "../../examples/state/main.rs"

[[example]]
name = "streaming"
path = "../../examples/streaming/main.rs"

[[example]]
name = "isolation"
path = "../../examples/isolation/main.rs"
required-features = ["isolation"]
[dependencies.anyhow]
version = "1.0"

[dependencies.attohttpc]
version = "0.18"
features = ["json", "form"]
optional = true

[dependencies.base64]
version = "0.13"
optional = true

[dependencies.bincode]
version = "1.3"

[dependencies.bytes]
version = "1"
features = ["serde"]
optional = true

[dependencies.clap]
version = "3"
optional = true

[dependencies.data-url]
version = "0.1"
optional = true

[dependencies.dirs-next]
version = "2.0"

[dependencies.either]
version = "1.6"

[dependencies.flate2]
version = "1.0"

[dependencies.futures]
version = "0.3"

[dependencies.futures-lite]
version = "1.12"

[dependencies.glob]
version = "0.3"

[dependencies.http]
version = "0.2"

[dependencies.ico]
version = "0.1"
optional = true

[dependencies.ignore]
version = "0.4"

[dependencies.infer]
version = "0.7"
optional = true

[dependencies.memchr]
version = "2.4"
optional = true

[dependencies.minisign-verify]
version = "0.2"
optional = true

[dependencies.notify-rust]
version = "4.5"
optional = true

[dependencies.once_cell]
version = "1.10"

[dependencies.open]
version = "2.0"
optional = true

[dependencies.os_info]
version = "3.2.0"
optional = true

[dependencies.os_pipe]
version = "1.0"
optional = true

[dependencies.percent-encoding]
version = "2.1"

[dependencies.png]
version = "0.17"
optional = true

[dependencies.rand]
version = "0.8"

[dependencies.raw-window-handle]
version = "0.4.2"

[dependencies.regex]
version = "1.5.5"
optional = true

[dependencies.reqwest]
version = "0.11"
features = ["json", "multipart", "stream"]
optional = true

[dependencies.rfd]
version = "0.8"
optional = true

[dependencies.semver]
version = "1.0"

[dependencies.serde]
version = "1.0"
features = ["derive"]

[dependencies.serde_json]
version = "1.0"
features = ["raw_value"]

[dependencies.serde_repr]
version = "0.1"

[dependencies.serialize-to-javascript]
version = "=0.1.1"

[dependencies.shared_child]
version = "1.0"
optional = true

[dependencies.state]
version = "0.5"

[dependencies.tar]
version = "0.4.36"

[dependencies.tauri-macros]
version = "1.0.0-rc.4"

[dependencies.tauri-runtime]
version = "0.3.4"

[dependencies.tauri-runtime-wry]
version = "0.3.5"
optional = true

[dependencies.tauri-utils]
version = "1.0.0-rc.4"

[dependencies.tempfile]
version = "3"

[dependencies.thiserror]
version = "1.0"

[dependencies.tokio]
version = "1.16"
features = ["rt", "rt-multi-thread", "sync", "fs", "io-util"]

[dependencies.url]
version = "2.2"

[dependencies.uuid]
version = "0.8"
features = ["v4"]

[dependencies.zip]
version = "0.6"
optional = true
default-features = false
[dev-dependencies.mockito]
version = "0.31"

[dev-dependencies.proptest]
version = "1.0.0"

[dev-dependencies.quickcheck]
version = "1.0.3"

[dev-dependencies.quickcheck_macros]
version = "1.0.0"

[dev-dependencies.serde]
version = "1.0"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0"

[dev-dependencies.tokio]
version = "1.16"
features = ["full"]

[dev-dependencies.tokio-test]
version = "0.4.2"
[build-dependencies.cfg_aliases]
version = "0.1.1"

[features]
__updater-docs = ["minisign-verify", "base64", "http-api", "dialog-ask"]
api-all = ["clipboard-all", "dialog-all", "fs-all", "global-shortcut-all", "http-all", "notification-all", "os-all", "path-all", "process-all", "protocol-all", "shell-all", "window-all"]
cli = ["clap"]
clipboard-all = ["clipboard-write-text", "clipboard-read-text"]
clipboard-read-text = []
clipboard-write-text = []
compression = ["tauri-macros/compression", "tauri-utils/compression"]
config-json5 = ["tauri-macros/config-json5"]
custom-protocol = ["tauri-macros/custom-protocol"]
default = ["wry", "compression", "objc-exception"]
devtools = ["tauri-runtime/devtools", "tauri-runtime-wry/devtools"]
dialog = ["rfd"]
dialog-all = ["dialog-open", "dialog-save", "dialog-message", "dialog-ask"]
dialog-ask = ["dialog"]
dialog-confirm = ["dialog"]
dialog-message = ["dialog"]
dialog-open = ["dialog"]
dialog-save = ["dialog"]
dox = ["tauri-runtime-wry/dox"]
fs-all = ["fs-copy-file", "fs-create-dir", "fs-read-file", "fs-read-dir", "fs-remove-dir", "fs-remove-file", "fs-rename-file", "fs-write-file"]
fs-copy-file = []
fs-create-dir = []
fs-extract-api = ["zip"]
fs-read-dir = []
fs-read-file = []
fs-remove-dir = []
fs-remove-file = []
fs-rename-file = []
fs-write-file = []
global-shortcut-all = []
http-all = ["http-request"]
http-api = ["attohttpc"]
http-request = ["http-api"]
icon-ico = ["infer", "ico"]
icon-png = ["infer", "png"]
isolation = ["tauri-utils/isolation", "tauri-macros/isolation"]
macos-private-api = ["tauri-runtime/macos-private-api", "tauri-runtime-wry/macos-private-api"]
notification = ["notify-rust"]
notification-all = ["notification", "dialog-ask"]
objc-exception = ["tauri-runtime-wry/objc-exception"]
os-all = ["os_info"]
path-all = []
process-all = ["process-relaunch", "process-exit"]
process-command-api = ["shared_child", "os_pipe", "memchr"]
process-exit = []
process-relaunch = []
process-relaunch-dangerous-allow-symlink-macos = ["tauri-utils/process-relaunch-dangerous-allow-symlink-macos"]
protocol-all = ["protocol-asset"]
protocol-asset = []
reqwest-client = ["reqwest", "bytes"]
shell-all = ["shell-execute", "shell-sidecar", "shell-open"]
shell-execute = ["process-command-api", "regex", "tauri-macros/shell-scope"]
shell-open = ["shell-open-api"]
shell-open-api = ["open", "regex", "tauri-macros/shell-scope"]
shell-sidecar = ["process-command-api", "regex", "tauri-macros/shell-scope"]
system-tray = ["tauri-runtime/system-tray", "tauri-runtime-wry/system-tray"]
updater = ["minisign-verify", "base64", "http-api", "dialog-ask", "fs-extract-api"]
window-all = ["window-create", "window-center", "window-request-user-attention", "window-set-resizable", "window-set-title", "window-maximize", "window-unmaximize", "window-minimize", "window-unminimize", "window-show", "window-hide", "window-close", "window-set-decorations", "window-set-always-on-top", "window-set-size", "window-set-min-size", "window-set-max-size", "window-set-position", "window-set-fullscreen", "window-set-focus", "window-set-icon", "window-set-skip-taskbar", "window-start-dragging", "window-print"]
window-center = []
window-close = []
window-create = []
window-data-url = ["data-url"]
window-hide = []
window-maximize = []
window-minimize = []
window-print = []
window-request-user-attention = []
window-set-always-on-top = []
window-set-decorations = []
window-set-focus = []
window-set-fullscreen = []
window-set-icon = []
window-set-max-size = []
window-set-min-size = []
window-set-position = []
window-set-resizable = []
window-set-size = []
window-set-skip-taskbar = []
window-set-title = []
window-show = []
window-start-dragging = []
window-unmaximize = []
window-unminimize = []
wry = ["tauri-runtime-wry"]
[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.glib]
version = "0.15"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies.gtk]
version = "0.15"
features = ["v3_20"]
[target."cfg(target_os = \"macos\")".dependencies.embed_plist]
version = "1.2"
[target."cfg(windows)".dependencies.windows]
version = "0.30.0"
features = ["Win32_Foundation"]
